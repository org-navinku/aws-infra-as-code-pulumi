image:
  name: pulumi/pulumi-python:latest
  entrypoint: [""]

stages:
  - validate
  - install
  - preview
  - refresh
  - dev

cache:
  paths:
    - .pulumi
    - "**/__pycache__/"
    - .venv/

variables:
  GIT_DEPTH: "1"
  GIT_STRATEGY: clone
  AWS_REGION: "us-east-2"
  PULUMI_BACKEND_URL: "s3://${PULUMI_S3_BUCKET}"
  STACK_NAME: "dev"

before_script:
  - echo "Setting up environment variables"
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - export AWS_DEFAULT_REGION=${AWS_REGION}
  - pulumi login ${PULUMI_BACKEND_URL}

validate:
  stage: validate
  script:
    - echo "Validating project structure"
    - |
      if [ ! -f "requirements.txt" ]; then
        echo "ERROR: requirements.txt not found!"
        echo "Please create requirements.txt with Pulumi dependencies"
        exit 1
      fi
    - |
      if [ ! -f "Pulumi.yaml" ]; then
        echo "ERROR: Pulumi.yaml not found!"
        echo "Please run 'pulumi new' to initialize your project"
        exit 1
      fi
    - |
      if [ ! -f "__main__.py" ]; then
        echo "ERROR: __main__.py not found!"
        echo "Please create your main Pulumi program file"
        exit 1
      fi
    - echo "Project structure validation passed"
  only:
    - branches

install:
  stage: install
  script:
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python -c "import pulumi; print('Pulumi version:', pulumi._version)"
  artifacts:
    paths:
      - .venv/
      - .pulumi/
      - __pycache__/
    expire_in: 1h
  only:
    - branches
  when: always
  dependencies:
    - validate

preview:
  stage: preview
  script:
    - source .venv/bin/activate
    - pulumi stack select ${STACK_NAME} || pulumi stack init ${STACK_NAME}
    - pulumi preview --stack ${STACK_NAME} --diff --non-interactive --color always
  needs:
    - install
  only:
    - branches
  when: on_success
  dependencies:
    - install

refresh:
  stage: refresh
  script:
    - source .venv/bin/activate
    - pulumi stack select ${STACK_NAME} || pulumi stack init ${STACK_NAME}
    - pulumi refresh --yes --non-interactive --color always --skip-preview --stack ${STACK_NAME}
  needs:
    - install
  when: manual
  only:
    - branches

deploy-to-dev:
  stage: dev
  script:
    - source .venv/bin/activate
    - pulumi up --yes --non-interactive --color always --skip-preview --stack ${STACK_NAME}
  needs:
    - preview
  when: manual
  only:
    - main

destroy-dev:
  stage: dev
  script:
    - echo "Activating virtual environment"
    - source .venv/bin/activate
    - echo "Running Pulumi destroy for stack:" ${STACK_NAME}
    - pulumi stack select ${STACK_NAME} || pulumi stack init ${STACK_NAME}
    - pulumi destroy --yes --non-interactive --color always --stack ${STACK_NAME}
  only:
    - main
  when: manual
  dependencies:
    - deploy-to-dev
  needs:
    - deploy-to-dev